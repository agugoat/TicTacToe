package ticTac;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class ticTacGui {
	private JFrame frame;
	private JButton[][] buttons = new JButton[3][3];
	private char currentTurn = 'X';
	ticTac game = new ticTac();

	public ticTacGui() {
		String[] options = { "Two-Player Mode", "CPU Mode" };
		int response = JOptionPane.showOptionDialog(null, "Choose a mode:", "Tic Tac Toe", JOptionPane.DEFAULT_OPTION,
				JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

		boolean isTwoPlayerMode = (response == 0);
		ticInitizaler(isTwoPlayerMode);
	}

	private void ticInitizaler(boolean isTwoPlayerMode) {
		game = new ticTac(isTwoPlayerMode);

		if (frame == null) {
			frame = new JFrame("Tic Tac Toe");
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			frame.setSize(300, 300);
			frame.setLayout(new GridLayout(3, 3));
		} else {
			frame.getContentPane().removeAll();
		}

		// Initialize buttons
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				buttons[i][j] = new JButton();
				frame.add(buttons[i][j]);
				buttons[i][j].addActionListener(new ButtonListener(i, j));
			}
		}

		frame.setVisible(true);

	}

	private class ButtonListener implements ActionListener {
		private int row;
		private int col;

		public ButtonListener(int row, int col) {
			this.row = row;
			this.col = col;
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			if (game.getBoard()[row][col] == BoardChars.EMPTY && !game.gameIsOver()) {
				game.makeMove(row, col);
				updateBoard();
				if (!game.gameIsOver() && !game.isTwoPlayerMode()) {
					game.cpuMove();
					updateBoard();
				}
				if (game.gameIsOver()) {
					endGame();
				}
			}
		}
	}

	private void endGame() {
		String message = "Draw!";
		if (game.checkForWin(BoardChars.PLAYERCHAR)) {
			message = "You win!";
		} else if (game.checkForWin(BoardChars.CPUCHAR)) {
			message = "CPU wins!";
		}
		if (game.isTwoPlayerMode() == true) {
			if (game.checkForWin(BoardChars.PLAYERCHAR)) {
				message = "Player 1 wins!";
			} else if (game.checkForWin(BoardChars.CPUCHAR)) {
				message = "Player 2 wins!";
			}
		}
		int playAgain = JOptionPane.showConfirmDialog(frame, message + " Play again?", "Game Over",
				JOptionPane.YES_NO_OPTION);
		if (playAgain == JOptionPane.YES_OPTION) {
			ticInitizaler(game.isTwoPlayerMode());

		} else {
			frame.dispose();
		}
	}

	private void updateBoard() {
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				JButton jButton = new JButton();
				buttons[i][j].setText(String.valueOf(game.getBoard()[i][j].getSymbol()));

			}
		}
	}

	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				new ticTacGui();
			}
		});
	}
}
